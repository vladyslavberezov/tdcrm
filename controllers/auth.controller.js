const {handleError} = require('../lib/utils/')const bcrypt = require('bcrypt')const {UsersDAO} = require('../dao')const AccessTokenService = require('../services/token/access-token.service')const {BadRequestError, UnauthorizedError} = require('../lib/errors')const signIn = handleError(async (req, res, next) => {  const user = await UsersDAO.findUnique({    email: req.body.userCreds,    nickname: req.body.userCreds,  })  if (!user) {    next(new UnauthorizedError()) //TODO: 401    return  }  const isPasswordValid = await bcrypt.compare(req.body.password, user.password)  if (!isPasswordValid) {    next(new BadRequestError('Email or password is invalid'))    return  }  const {    token:      accessToken,    expiresAt,  } = await AccessTokenService.generate({    userId: user.id,    userRole: user.userRole,  })  res.send({    data: {      accessToken,      expiresAt,    },  })})module.exports = {  signIn,}